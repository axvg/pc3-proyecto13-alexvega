diff --git a/modules/python/compute_module/server.py b/modules/python/compute_module/server.py
index 47ff90e..41af4d7 100644
--- a/modules/python/compute_module/server.py
+++ b/modules/python/compute_module/server.py
@@ -4,6 +4,7 @@ class ServerFactoryModule:
         self.network = network
         self.server_type = "web"
         self.instance_count = instance_count
+        self._depends_on = [self.network]
 
     def build(self):
         command = f"echo 'Creando server {self.name} con network {self.network.name}'"
@@ -14,6 +15,7 @@ class ServerFactoryModule:
                     self.name: {
                         "count": self.instance_count,
                         "provisioner": {"local-exec": {"command": command}},
+                        "depends_on": [f"null_resource.{dep.name}" for dep in self._depends_on],
                     },
                 }
             }
diff --git a/modules/python/storage_module/database.py b/modules/python/storage_module/database.py
index 39271a6..a266c97 100644
--- a/modules/python/storage_module/database.py
+++ b/modules/python/storage_module/database.py
@@ -4,6 +4,7 @@ class DatabaseFactoryModule:
         self.server = server
         self.network = network
         self.database_type = "sqlite"
+        self._depends_on = [self.server, self.network]
 
     def build(self):
         command = f"echo 'Creando db {self.name} con server {self.server.name} y network {self.network.name}'"
@@ -13,6 +14,7 @@ class DatabaseFactoryModule:
                 "null_resource": {
                     self.name: {
                         "provisioner": {"local-exec": {"command": command}},
+                        "depends_on": [f"null_resource.{dep.name}" for dep in self._depends_on],
                     },
                 }
             }
diff --git a/tests/__init__.py b/tests/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/tests/conftest.py b/tests/conftest.py
new file mode 100644
index 0000000..50449d9
--- /dev/null
+++ b/tests/conftest.py
@@ -0,0 +1,39 @@
+from modules.python.network_module.network import NetworkFactoryModule
+from modules.python.compute_module.server import ServerFactoryModule
+from modules.python.storage_module.database import DatabaseFactoryModule
+import pytest
+
+
+@pytest.fixture
+def sample_network():
+    return NetworkFactoryModule("test-network", 8080)
+
+
+@pytest.fixture
+def sample_network_custom():
+    return NetworkFactoryModule("test-net", 443)
+
+
+@pytest.fixture
+def sample_server(sample_network):
+    return ServerFactoryModule("test-server", sample_network, 4)
+
+
+@pytest.fixture
+def sample_database(sample_server, sample_network):
+    return DatabaseFactoryModule("test-db", sample_server, sample_network)
+
+
+@pytest.fixture
+def network_factory():
+    return NetworkFactoryModule
+
+
+@pytest.fixture
+def server_factory():
+    return ServerFactoryModule
+
+
+@pytest.fixture
+def database_factory():
+    return DatabaseFactoryModule
diff --git a/tests/unit/test_compute_module.py b/tests/unit/test_compute_module.py
new file mode 100644
index 0000000..75a5df9
--- /dev/null
+++ b/tests/unit/test_compute_module.py
@@ -0,0 +1,25 @@
+def test_server_initialization(server_factory, sample_network):
+    server_name = "test-server"
+    server_instance = server_factory(name=server_name, network=sample_network, instance_count=4)
+
+    assert server_instance.name == server_name
+    assert server_instance.network == sample_network
+    assert sample_network in server_instance._depends_on
+
+
+def test_build(sample_server):
+    result = sample_server.build()
+
+    assert isinstance(result, list)
+    assert len(result) == 1
+
+    assert "null_resource" in result[0]
+    assert "test-server" in result[0]["null_resource"]
+
+    resource = result[0]["null_resource"]["test-server"]
+    assert "local-exec" in resource["provisioner"]
+
+    assert resource["count"] == 4
+
+    expected_command = f"echo 'Creando server {sample_server.name} con network {sample_server.network.name}'"
+    assert resource["provisioner"]["local-exec"]["command"] == expected_command
diff --git a/tests/unit/test_network_module.py b/tests/unit/test_network_module.py
new file mode 100644
index 0000000..423c6f1
--- /dev/null
+++ b/tests/unit/test_network_module.py
@@ -0,0 +1,27 @@
+def test_network_initialization(network_factory):
+    network_name = "test-network"
+    network_port = 8080
+
+    network_instance = network_factory(
+        name=network_name,
+        port=network_port
+    )
+
+    assert network_instance.name == network_name
+    assert network_instance.port == network_port
+    assert not hasattr(network_instance, '_depends_on')
+
+
+def test_build(sample_network):
+    result = sample_network.build()
+    assert isinstance(result, list)
+    assert len(result) == 1
+
+    assert "null_resource" in result[0]
+    assert "test-network" in result[0]["null_resource"]
+
+    resource = result[0]["null_resource"]["test-network"]
+    assert "local-exec" in resource["provisioner"]
+
+    expected_command = f"echo 'Creando network {sample_network.name}-us-east con puerto {sample_network.port}'"
+    assert resource["provisioner"]["local-exec"]["command"] == expected_command
diff --git a/tests/unit/test_storage_module.py b/tests/unit/test_storage_module.py
new file mode 100644
index 0000000..ab05a2e
--- /dev/null
+++ b/tests/unit/test_storage_module.py
@@ -0,0 +1,27 @@
+def test_database_initialization(database_factory, sample_server, sample_network):
+    db_name = "my-test-db"
+    db_instance = database_factory(
+        name=db_name,
+        server=sample_server,
+        network=sample_network
+    )
+
+    assert db_instance.name == db_name
+    assert db_instance._depends_on == [sample_server, sample_network]
+    assert db_instance.server == sample_server
+    assert db_instance.network == sample_network
+    assert db_instance.database_type is not None
+
+
+def test_build(sample_database):
+    result = sample_database.build()
+    assert isinstance(result, list)
+    assert len(result) == 1
+    assert "null_resource" in result[0]
+    assert "test-db" in result[0]["null_resource"]
+
+    resource = result[0]["null_resource"]["test-db"]
+    assert "local-exec" in resource["provisioner"]
+
+    expected_command = f"echo 'Creando db {sample_database.name} con server {sample_database.server.name} y network {sample_database.network.name}'"
+    assert resource["provisioner"]["local-exec"]["command"] == expected_command
